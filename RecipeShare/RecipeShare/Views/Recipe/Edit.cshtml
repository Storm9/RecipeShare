@model RecipeShare.Models.RecipeInputModel

@{
    @Styles.Render("~/Content/recipe.css")
    
    ViewBag.Title = "Editing " + Model.Name;
    List<RecipeShare.Models.Measure> measureNames = (List<RecipeShare.Models.Measure>)ViewData["MeasureNames"];
    List<RecipeShare.Models.IngredientName> ingredientNames = (List<RecipeShare.Models.IngredientName>)ViewData["IngredientNames"];

    measureNames.Insert(0, new RecipeShare.Models.Measure());
    ingredientNames.Insert(0, new RecipeShare.Models.IngredientName());
    
    RecipeShare.Models.Ingredient emptyIngredient = new RecipeShare.Models.Ingredient();
}

<section id="recipe" data-recipeid="@Model.RecipeID">
    <div class="images"><ul></ul></div>
</section>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Recipe</legend>

        @Html.HiddenFor(model => model.RecipeID)
        @Html.HiddenFor(model => model.ParentID)
        @Html.HiddenFor(model => model.Rating)
        @Html.HiddenFor(model => model.Votes)

        <div class="editor-label">
            @Html.LabelFor(model => model.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>
        <fieldset id="ingredientsList">
            <legend>Ingredients</legend>
            @for (int index = 0; index < Model.OldIngredients.Count(); index++)
            {
                var ingredient = Model.OldIngredients.ElementAt(index);
                <div class="ingredient-editor">

                    @Html.Hidden("OldIngredients[" + index + "].IngredientID", ingredient.IngredientID)
                    @Html.Hidden("OldIngredients[" + index + "].RecipeID", Model.RecipeID)

                    <span class="editor-field">
                        @Html.TextBox("OldIngredients[" + index + "].Quantity", ingredient.Quantity)
                        @Html.ValidationMessageFor(model => ingredient.Quantity)
                    </span>

                    <span class="editor-field">
                        @Html.DropDownList("OldIngredients[" + index + "].MeasureID", new SelectList(measureNames, "MeasureID", "Name", ingredient.MeasureID))
                        @Html.ValidationMessageFor(model => ingredient.MeasureID)
                    </span>

                    <span class="editor-field">
                        @Html.DropDownList("OldIngredients[" + index + "].IngredientNameID", new SelectList(ingredientNames, "IngredientNameID", "Name", ingredient.IngredientNameID))
                        @Html.ValidationMessageFor(model => ingredient.IngredientNameID)
                    </span>

                    <span class="editor-field">
                        @Html.TextBox("OldIngredients[" + index + "].Description", ingredient.Description)
                        @Html.ValidationMessageFor(model => ingredient.Description)
                    </span>
                </div>
            }
        </fieldset>
        <button id="addIngredient">Add Ingredient...</button>
        <div class="editor-label">
            @Html.LabelFor(model => model.Instructions)
        </div>
        <div class="editor-field">
            @Html.TextAreaFor(model => model.Instructions)
            @Html.ValidationMessageFor(model => model.Instructions)
        </div>

        <section id="image" data-recipeid="@Model.RecipeID">
            @Html.Partial("ImageUpload")
        </section>


        <p>
            <button id="saveChanges">Save Changes</button>
            <button id="createChild">New Recipe</button>
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Delete", "Delete", new { id = Model.RecipeID })
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts 
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval") 
    @Scripts.Render("~/Scripts/unslider.min.js")  
    @Scripts.Render("~/Scripts/jquery.ui.widget.js")
    @Scripts.Render("~/Scripts/jquery.iframe-transport.js")
    @Scripts.Render("~/Scripts/jquery.fileupload.js")
    @Scripts.Render("~/Scripts/jquery.cloudinary.js")
    @Scripts.Render("~/Scripts/recipe-edit.js")
    @Scripts.Render("~/Scripts/image-upload.js")

    <script type="text/template" id="newIngredientTemplate">
        <div class="new-ingredient">
            @Html.Hidden("NewIngredients[{0}].RecipeID", Model.RecipeID)

            <span class="editor-field">
                @Html.Editor("NewIngredients[{0}].Quantity")
                @Html.ValidationMessage("Quantity", emptyIngredient)
            </span>

            <span class="editor-field">
                @Html.DropDownList("NewIngredients[{0}].MeasureID", new SelectList(measureNames, "MeasureID", "Name"))
                @Html.ValidationMessage("MeasureID", emptyIngredient)
            </span>

            <span class="editor-field">
                @Html.DropDownList("NewIngredients[{0}].IngredientNameID", new SelectList(ingredientNames, "IngredientNameID", "Name"))
                @Html.ValidationMessage("IngredientNameID", emptyIngredient)
            </span>

            <span class="editor-field">
                @Html.Editor("NewIngredients[{0}].Description")
                @Html.ValidationMessage("Description", emptyIngredient)
            </span>
        </div>
    </script>
}
