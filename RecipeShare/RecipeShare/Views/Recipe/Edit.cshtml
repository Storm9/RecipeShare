@model RecipeShare.Models.RecipeInputModel

@{    
    ViewBag.Title = "Editing " + Model.Name;
    List<RecipeShare.Models.Measure> measureNames = (List<RecipeShare.Models.Measure>)ViewData["MeasureNames"];
    List<RecipeShare.Models.IngredientName> ingredientNames = (List<RecipeShare.Models.IngredientName>)ViewData["IngredientNames"];

    measureNames.Insert(0, new RecipeShare.Models.Measure());
    ingredientNames.Insert(0, new RecipeShare.Models.IngredientName());
    
    RecipeShare.Models.Ingredient emptyIngredient = new RecipeShare.Models.Ingredient();
}

@section Styles 
{
    @Styles.Render("~/Content/RecipeEdit.css")
    @Styles.Render("~/Content/feature-carousel.css")
}

@section Scripts 
{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval") 
    @Scripts.Render("~/bundles/jqueryui")
    @Scripts.Render("~/Scripts/jquery.featureCarousel.min.js")
    @Scripts.Render("~/Scripts/jquery.ui.widget.js")
    @Scripts.Render("~/Scripts/jquery.iframe-transport.js")
    @Scripts.Render("~/Scripts/jquery.fileupload.js")
    @Scripts.Render("~/Scripts/jquery.cloudinary.js")
    @Scripts.Render("~/Scripts/recipe-edit.js")
    @Scripts.Render("~/Scripts/image-upload.js")

    <script type="text/javascript">
        $(document).ready(function () {
            autoComplete(".measure", "/Recipe/GetRecipes");
            autoComplete(".ingredient-name", "/Recipe/GetIngredients");
        });
    </script>

    <script type="text/template" id="newIngredientTemplate">
        <div class="ingredient-editor new-ingredient">
            @Html.Hidden("NewIngredients[{0}].RecipeID", Model.RecipeID)

            <span class="editor-field quantity">
                @Html.Editor("NewIngredients[{0}].Quantity")
                @Html.ValidationMessage("Quantity", emptyIngredient)
            </span>

            <span class="editor-field measure">
                @Html.TextBox("NewIngredients[{0}].Measure")
                @Html.ValidationMessage("Measure", emptyIngredient)
            </span>

            <span class="editor-field ingredient-name">
                @Html.TextBox("NewIngredients[{0}].IngredientName")
                @Html.ValidationMessage("IngredientName", emptyIngredient)
            </span>

            <span class="editor-field description">
                @Html.Editor("NewIngredients[{0}].Description")
                @Html.ValidationMessage("Description", emptyIngredient)
            </span>
        </div>
    </script>
}

<div class="carousel-container" style="display:none">
    <div id="carousel"></div>
    <div id="carousel-left">
        <img src="@Url.Content("~/Images/arrow-left.png")" />
    </div>
    <div id="carousel-right">
        <img src="@Url.Content("~/Images/arrow-right.png")" />
    </div>
</div>

<section id="recipe" data-recipeid="@Model.RecipeID">
    @using (Html.BeginForm())
    {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)

        <fieldset>
            <legend>Recipe</legend>

            @Html.HiddenFor(model => model.RecipeID)
            @Html.HiddenFor(model => model.ParentID)
            @Html.HiddenFor(model => model.Rating)
            @Html.HiddenFor(model => model.Votes)

            <div class="editor-label">
                @Html.LabelFor(model => model.Name)
            </div>
            <div class="editor-field">
                @Html.EditorFor(model => model.Name)
                @Html.ValidationMessageFor(model => model.Name)
            </div>
            <fieldset id="ingredientsList">
                <legend>Ingredients</legend>
                @for (int index = 0; index < Model.OldIngredients.Count(); index++)
                {
                    var ingredient = Model.OldIngredients.ElementAt(index);
                    <div class="ingredient-editor">

                        @Html.Hidden("OldIngredients[" + index + "].IngredientID", ingredient.IngredientID)
                        @Html.Hidden("OldIngredients[" + index + "].RecipeID", Model.RecipeID)

                        <span class="editor-field quantity">
                            @Html.TextBox("OldIngredients[" + index + "].Quantity", ingredient.Quantity)
                            @Html.ValidationMessageFor(model => ingredient.Quantity)
                        </span>

                        <span class="editor-field measure">
                            @Html.TextBox("OldIngredients[" + index + "].Measure", ingredient.Measure)
                            @Html.ValidationMessageFor(model => ingredient.Measure)
                        </span>

                        <span class="editor-field ingredient-name">
                            @Html.TextBox("OldIngredients[" + index + "].IngredientName", ingredient.IngredientName)
                            @Html.ValidationMessageFor(model => ingredient.IngredientName)
                        </span>

                        <span class="editor-field description">
                            @Html.TextBox("OldIngredients[" + index + "].Description", ingredient.Description)
                            @Html.ValidationMessageFor(model => ingredient.Description)
                        </span>
                    </div>
            }
            </fieldset>
            <button id="addIngredient">Add Ingredient</button>
            <div class="editor-label">
                @Html.LabelFor(model => model.Instructions)
            </div>
            <div class="editor-field">
                @Html.TextAreaFor(model => model.Instructions)
                @Html.ValidationMessageFor(model => model.Instructions)
            </div>

            <section id="image" data-recipeid="@Model.RecipeID">
                @Html.Partial("ImageUpload")
            </section>


            <p>
                <button id="saveChanges">Save Changes</button>
                <button id="createChild">New Recipe</button>
            </p>
        </fieldset>
}
</section>

<div>
    @Html.ActionLink("Delete", "Delete", new { id = Model.RecipeID })
    @Html.ActionLink("Back to List", "Index")
</div>
